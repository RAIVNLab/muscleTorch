import numpy as np

train_set_list = np.array([3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 19, 20, 22, 23, 24, 25, 26, 27, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 58, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 80, 81, 82, 83, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 120, 121, 122, 123, 124, 130, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 170, 177, 178, 179, 203, 204, 205, 206, 213, 214, 215, 216, 217, 218, 219, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 274, 275, 276, 277, 278, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 303, 304, 305, 306, 307, 308, 309, 313, 314, 318, 319, 320, 321, 322, 323, 324, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 353, 354, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 391, 392, 393, 394, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 436, 437, 438, 439, 440, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 467, 468, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 514, 527, 528, 529, 530, 534, 535, 536, 540, 541, 542, 543, 544, 545, 546, 547, 548, 552, 553, 554, 572, 573, 574, 575, 576, 577, 578, 584, 585, 586, 587, 588, 589, 590, 595, 596, 597, 598, 599, 600, 601, 602, 608, 609, 610, 611, 614, 615, 616, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 639, 640, 641, 642, 643, 646, 647, 648, 649, 652, 653, 654, 655, 659, 660, 661, 662, 665, 666, 667, 674, 675, 682, 683, 684, 685, 691, 692, 695, 696, 700, 701, 702, 703, 704, 705, 714, 715, 716, 719, 720, 721, 722, 723, 729, 730, 735, 736, 737, 738, 739, 740, 741, 742, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 805, 806, 807, 808, 809, 815, 816, 817, 818, 819, 820, 824, 825, 826, 827, 828, 829, 830, 831, 832, 847, 848, 849, 853, 854, 855, 856, 863, 864, 865, 866, 867, 868, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 909, 910, 911, 912, 913, 914, 915, 916, 920, 921, 922, 923, 924, 925, 929, 930, 931, 936, 937, 938, 939, 940, 941, 942, 943, 944, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 963, 964, 968, 969, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 996, 997, 998, 999, 1000, 1005, 1006, 1007, 1008, 1009, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1035, 1036, 1037, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1050, 1051, 1054, 1055, 1056, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1085, 1086, 1087, 1097, 1105, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1120, 1121, 1122, 1132, 1133, 1134, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1159, 1160, 1161, 1168, 1169, 1172, 1173, 1177, 1178, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1197, 1198, 1199, 1200, 1213, 1214, 1215, 1221, 1222, 1223, 1224, 1225, 1231, 1232, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1251, 1252, 1253, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1281, 1282, 1283, 1284, 1296, 1300, 1301, 1309, 1310, 1311, 1312, 1313, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1333, 1334, 1341, 1342, 1343, 1344, 1345, 1346, 1350, 1351, 1352, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1366, 1367, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1392, 1393, 1402, 1403, 1404, 1405, 1406, 1415, 1416, 1417, 1418, 1419, 1420, 1425, 1426, 1427, 1428, 1429, 1434, 1435, 1436, 1437, 1438, 1439, 1440])

testval_set_list = np.array([1, 2, 9, 14, 15, 16, 17, 18, 21, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 46, 47, 56, 57, 59, 60, 61, 62, 63, 76, 77, 78, 79, 84, 85, 86, 87, 88, 89, 90, 91, 117, 118, 119, 125, 126, 127, 128, 129, 131, 132, 133, 134, 137, 153, 154, 155, 167, 168, 169, 171, 172, 173, 174, 175, 176, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 207, 208, 209, 210, 211, 212, 220, 221, 222, 250, 264, 271, 272, 273, 279, 280, 281, 282, 283, 284, 285, 296, 297, 298, 299, 300, 301, 302, 310, 311, 312, 315, 316, 317, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 351, 352, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 384, 385, 386, 387, 388, 389, 390, 395, 396, 397, 411, 412, 413, 414, 430, 431, 432, 433, 434, 435, 441, 442, 443, 444, 445, 446, 447, 448, 462, 463, 464, 465, 466, 469, 470, 471, 472, 473, 474, 475, 476, 477, 508, 509, 510, 511, 512, 513, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 531, 532, 533, 537, 538, 539, 549, 550, 551, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 579, 580, 581, 582, 583, 591, 592, 593, 594, 603, 604, 605, 606, 607, 612, 613, 617, 618, 619, 620, 621, 633, 634, 635, 636, 637, 638, 644, 645, 650, 651, 656, 657, 658, 663, 664, 668, 669, 670, 671, 672, 673, 676, 677, 678, 679, 680, 681, 686, 687, 688, 689, 690, 693, 694, 697, 698, 699, 706, 707, 708, 709, 710, 711, 712, 713, 717, 718, 724, 725, 726, 727, 728, 731, 732, 733, 734, 743, 744, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 800, 801, 802, 803, 804, 810, 811, 812, 813, 814, 821, 822, 823, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 850, 851, 852, 857, 858, 859, 860, 861, 862, 869, 870, 871, 906, 907, 908, 917, 918, 919, 926, 927, 928, 932, 933, 934, 935, 945, 946, 947, 959, 960, 961, 962, 965, 966, 967, 970, 971, 972, 973, 974, 975, 976, 977, 991, 992, 993, 994, 995, 1001, 1002, 1003, 1004, 1010, 1011, 1012, 1021, 1022, 1023, 1032, 1033, 1034, 1038, 1039, 1048, 1049, 1052, 1053, 1057, 1058, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1106, 1107, 1108, 1109, 1117, 1118, 1119, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1135, 1136, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1162, 1163, 1164, 1165, 1166, 1167, 1170, 1171, 1174, 1175, 1176, 1179, 1180, 1181, 1182, 1183, 1184, 1192, 1193, 1194, 1195, 1196, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1216, 1217, 1218, 1219, 1220, 1226, 1227, 1228, 1229, 1230, 1233, 1234, 1235, 1247, 1248, 1249, 1250, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1275, 1276, 1277, 1278, 1279, 1280, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1297, 1298, 1299, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1314, 1315, 1329, 1330, 1331, 1332, 1335, 1336, 1337, 1338, 1339, 1340, 1347, 1348, 1349, 1353, 1354, 1355, 1356, 1364, 1365, 1368, 1369, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1421, 1422, 1423, 1424, 1430, 1431, 1432, 1433, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449])

val_set_list = np.array([1, 2, 9, 15, 16, 18, 21, 31, 33, 34, 37, 39, 41, 42, 43, 46, 56, 60, 61, 62, 77, 78, 79, 84, 87, 89, 90, 117, 118, 125, 126, 128, 129, 134, 154, 169, 172, 174, 180, 182, 184, 185, 186, 189, 191, 196, 197, 199, 201, 207, 208, 210, 211, 220, 221, 222, 250, 264, 271, 273, 279, 285, 296, 298, 299, 300, 301, 302, 311, 312, 315, 316, 317, 328, 330, 331, 334, 335, 352, 356, 357, 358, 359, 360, 362, 363, 364, 385, 386, 387, 388, 395, 411, 430, 431, 441, 444, 446, 464, 465, 470, 471, 472, 473, 476, 477, 511, 513, 516, 519, 520, 523, 524, 532, 537, 549, 551, 557, 559, 562, 563, 564, 568, 580, 581, 583, 592, 604, 606, 613, 617, 618, 621, 633, 636, 637, 644, 650, 657, 658, 663, 668, 669, 670, 671, 672, 673, 676, 677, 678, 681, 690, 693, 697, 698, 699, 706, 707, 708, 711, 712, 725, 733, 743, 760, 764, 766, 767, 769, 770, 771, 773, 775, 776, 779, 780, 781, 784, 787, 803, 804, 811, 813, 814, 821, 822, 823, 833, 837, 838, 839, 844, 846, 852, 858, 860, 861, 869, 870, 908, 917, 918, 928, 932, 933, 934, 961, 971, 974, 976, 977, 993, 995, 1002, 1004, 1010, 1022, 1033, 1034, 1038, 1039, 1049, 1075, 1078, 1088, 1090, 1094, 1098, 1100, 1101, 1102, 1107, 1108, 1117, 1118, 1123, 1124, 1125, 1127, 1128, 1129, 1144, 1145, 1146, 1147, 1150, 1151, 1152, 1153, 1154, 1156, 1158, 1162, 1163, 1165, 1167, 1171, 1182, 1192, 1194, 1196, 1202, 1203, 1205, 1206, 1207, 1208, 1217, 1226, 1228, 1250, 1254, 1256, 1257, 1258, 1260, 1261, 1263, 1265, 1276, 1277, 1278, 1286, 1287, 1288, 1290, 1291, 1299, 1302, 1304, 1306, 1308, 1315, 1329, 1331, 1335, 1336, 1339, 1347, 1353, 1354, 1355, 1368, 1369, 1385, 1387, 1388, 1389, 1390, 1391, 1395, 1396, 1397, 1400, 1407, 1408, 1412, 1413, 1422, 1431, 1432, 1442, 1443, 1444, 1446, 1448, 1449])

test_set_list = np.array([14, 17, 28, 29, 30, 32, 35, 36, 38, 40, 47, 57, 59, 63, 76, 85, 86, 88, 91, 119, 127, 131, 132, 133, 137, 153, 155, 167, 168, 171, 173, 175, 176, 181, 183, 187, 188, 190, 192, 193, 194, 195, 198, 200, 202, 209, 212, 272, 280, 281, 282, 283, 284, 297, 310, 325, 326, 327, 329, 332, 333, 351, 355, 361, 384, 389, 390, 396, 397, 412, 413, 414, 432, 433, 434, 435, 442, 443, 445, 447, 448, 462, 463, 466, 469, 474, 475, 508, 509, 510, 512, 515, 517, 518, 521, 522, 525, 526, 531, 533, 538, 539, 550, 555, 556, 558, 560, 561, 565, 566, 567, 569, 570, 571, 579, 582, 591, 593, 594, 603, 605, 607, 612, 619, 620, 634, 635, 638, 645, 651, 656, 664, 679, 680, 686, 687, 688, 689, 694, 709, 710, 713, 717, 718, 724, 726, 727, 728, 731, 732, 734, 744, 759, 761, 762, 763, 765, 768, 772, 774, 777, 778, 782, 783, 785, 786, 800, 801, 802, 810, 812, 834, 835, 836, 840, 841, 842, 843, 845, 850, 851, 857, 859, 862, 871, 906, 907, 919, 926, 927, 935, 945, 946, 947, 959, 960, 962, 965, 966, 967, 970, 972, 973, 975, 991, 992, 994, 1001, 1003, 1011, 1012, 1021, 1023, 1032, 1048, 1052, 1053, 1057, 1058, 1076, 1077, 1079, 1080, 1081, 1082, 1083, 1084, 1089, 1091, 1092, 1093, 1095, 1096, 1099, 1103, 1104, 1106, 1109, 1119, 1126, 1130, 1131, 1135, 1136, 1148, 1149, 1155, 1157, 1164, 1166, 1170, 1174, 1175, 1176, 1179, 1180, 1181, 1183, 1184, 1193, 1195, 1201, 1204, 1209, 1210, 1211, 1212, 1216, 1218, 1219, 1220, 1227, 1229, 1230, 1233, 1234, 1235, 1247, 1248, 1249, 1255, 1259, 1262, 1264, 1275, 1279, 1280, 1285, 1289, 1292, 1293, 1294, 1295, 1297, 1298, 1303, 1305, 1307, 1314, 1330, 1332, 1337, 1338, 1340, 1348, 1349, 1356, 1364, 1365, 1384, 1386, 1394, 1398, 1399, 1401, 1409, 1410, 1411, 1414, 1421, 1423, 1424, 1430, 1433, 1441, 1445, 1447])


UNAVAILBLE_WALK_TRAIN_SET=['000003.png', '000004.png', '000005.png', '000011.png', '000013.png', '000020.png', '000025.png', '000027.png', '000044.png', '000048.png', '000049.png', '000055.png', '000058.png', '000065.png', '000066.png', '000067.png', '000068.png', '000069.png', '000070.png', '000072.png', '000073.png', '000074.png', '000075.png', '000080.png', '000081.png', '000083.png', '000102.png', '000103.png', '000120.png', '000122.png', '000130.png', '000135.png', '000136.png', '000139.png', '000140.png', '000141.png', '000142.png', '000143.png', '000145.png', '000146.png', '000149.png', '000152.png', '000156.png', '000157.png', '000158.png', '000159.png', '000160.png', '000162.png', '000164.png', '000170.png', '000177.png', '000179.png', '000203.png', '000204.png', '000205.png', '000217.png', '000233.png', '000235.png', '000240.png', '000241.png', '000252.png', '000253.png', '000255.png', '000261.png', '000267.png', '000406.png', '000481.png', '000496.png', '000498.png', '000504.png', '000505.png', '000507.png', '000534.png', '000547.png', '000574.png', '000614.png', '000628.png', '000649.png', '000652.png', '000653.png', '000654.png', '000655.png', '000659.png', '000660.png', '000691.png', '000692.png', '000695.png', '000700.png', '000701.png', '000715.png', '000721.png', '000791.png', '000793.png', '000795.png', '000806.png', '000808.png', '000856.png', '000874.png', '000894.png', '000904.png', '000905.png', '000980.png', '001006.png', '001007.png', '001020.png', '001133.png', '001139.png', '001168.png', '001169.png', '001359.png']
UNAVAILBLE_WALK_TEST_SET=['000014.png', '000029.png', '000032.png', '000038.png', '000047.png', '000057.png', '000063.png', '000076.png', '000127.png', '000131.png', '000132.png', '000133.png', '000137.png', '000168.png', '000176.png', '000181.png', '000183.png', '000187.png', '000188.png', '000190.png', '000192.png', '000193.png', '000194.png', '000195.png', '000198.png', '000361.png', '000510.png', '000518.png', '000521.png', '000560.png', '000561.png', '000570.png', '000651.png', '000656.png', '000679.png', '000710.png', '000717.png', '000724.png', '000734.png', '000783.png', '000786.png', '000800.png', '000840.png', '000841.png', '000859.png', '000907.png', '001084.png', '001096.png', '001174.png', '001176.png', '001399.png'] #LATER_TODO not sure if we can do this


#code for generating val set list
# random.seed(0)
# testval_size = len(test_set_list)
# val_set_list = []
# for i in range(int(testval_size / 2)):
#     ind = random.randint(0, len(test_set_list))
#     element = test_set_list[ind]
#     test_set_list = np.delete(test_set_list, ind)
#     val_set_list.append(element)
# val_set_list.sort()

